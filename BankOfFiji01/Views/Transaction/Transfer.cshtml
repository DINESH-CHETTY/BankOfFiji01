@model BankOfFiji01.Models.TransferViewModel

@{
    ViewBag.Title = "Transfer to another account";
}

@if (TempData["Success"] != null)
{
    <div class="callout callout-success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="callout callout-danger">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
}

@using (Html.BeginForm("Transfer", "Transaction", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

        <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js"></script>

        <script type="text/javascript">
            $(function () {
                $("#TransferFrom").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#TransferAcc_ID");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                        $.ajax({
                    cache: false,
                            type: "GET",
                            url: "@(Url.RouteUrl("GetMyOtherAccounts", "Transaction"))",
                            data: { "Acc_ID": selectedItem },
                            success: function (data) {
                            ddlStates.html('');
                            $.each(data, function (id, option) {
                                ddlStates.append($('<option></option>').val(option.id).html(option.name));
                            });
                        statesProgress.hide();
                    },
                            error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
        </script>


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2">Enter the Amount: $</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Trans_Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Trans_Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Select the Account to transfer money from: </label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Acc_ID, Model.MyAccountsSelectListItem, new { style = "width: 500px;", id = "TransferFrom" })
                @Html.ValidationMessageFor(model => model.MyAccountsSelectListItem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Select the Account to transfer money to: </label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TransferAcc_ID, Model.MyOtherAccounts, new { style = "width: 500px;" })
                @Html.ValidationMessageFor(model => model.MyOtherAccounts, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type = "submit" id="Transfer" name="Transfer" value="Transfer" class="btn btn-success btn-block">
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
